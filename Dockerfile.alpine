FROM alpine:edge

ENV BUILD_PACKAGES="autoconf automake binutils curl file linux-headers git gcc g++ musl-dev make mpc1 pkgconf re2c tar libtool cmake go" \
    AR="gcc-ar" \
    RANLIB="gcc-ranlib" \
    NM="gcc-nm" \
    GITHUB_REPOS="\
microsoft/mimalloc:dev-slice \
curl/curl:master \
zlib-ng/zlib-ng:develop \
JayDDee/cpuminer-opt:master" \
    DOWNLOAD_URLS="https://gmplib.org/download/gmp/gmp-6.2.1.tar.bz2"

RUN set -xe; \
   apk add ${BUILD_PACKAGES};

RUN	set -xe; \
    mkdir -p /usr/src; \
	cd /usr/src; \
    for i in ${DOWNLOAD_URLS}; \
        do curl ${i} | tar xvj & \
    done; \
    for i in ${GITHUB_REPOS}; \
        do git clone --depth 1 -b ${i#*:} https://github.com/${i%:*} & \
    done; \
    git clone --depth 1 https://boringssl.googlesource.com/boringssl && wait;

ENV CFLAGS "-O3 \
-pipe \
-march=native \
-mtune=native \
-fno-exceptions \
-fno-stack-protector \
-fno-math-errno"

ENV CXXFLAGS="${CFLAGS}" \
    CPPFLAGS="-D_FORTIFY_SOURCE=0" \
    LDFLAGS="-L/usr/local/lib -Wl,-O1" \
    LTO_CFLAGS="-flto -fno-fat-lto-objects -fdevirtualize-at-ltrans -flto-compression-level=1"

# Build Mimalloc
RUN set -xe; \
    cd /usr/src/mimalloc*; \
    mkdir build; cd build; cmake -DMI_INSTALL_TOPLEVEL=On .. && make -j$(nproc ) && make install;

# Build BoringSSL
RUN set -xe; \
    cd /usr/src/boring*; \
    CFLAGS="${CFLAGS} ${LTO_CFLAGS}" CXXFLAGS="${CXXFLAGS} ${LTO_CFLAGS}" \
    mkdir build && cd build && cmake DCMAKE_BUILD_TYPE=Release .. &&  make -j$(nproc); \
    cd .. && mkdir lib && cd lib && ln -s ../build/ssl/libssl.a && ln -s ../build/crypto/libcrypto.a;

# Build Zlib-NG
RUN set -xe; \
    cd /usr/src/zlib*; \
    CFLAGS="${CFLAGS} ${LTO_CFLAGS}" CXXFLAGS="${CXXFLAGS} ${LTO_CFLAGS}" \
    ./configure --native --zlib-compat --static || cat configure.log; \
    make -j$(nproc) && make install

# Build Curl
RUN set -xe; \
    cd /usr/src/curl*; \
    CFLAGS="${CFLAGS} ${LTO_CFLAGS}" CXXFLAGS="${CXXFLAGS} ${LTO_CFLAGS}" \
    ./buildconf && ./configure  --with-ssl=/usr/src/boringssl --enable-shared=no; \
    make -j$(nproc) && make install

# Build gmp
RUN set -xe; \
    cd /usr/src/gmp*; \
    CFLAGS="${CFLAGS} ${LTO_CFLAGS}" CXXFLAGS="${CXXFLAGS} ${LTO_CFLAGS}" \
    ./configure --with-pic; \
    make -j$(nproc) && make install

# Build Cpuminer
RUN set -xe; \
    cd /usr/src/cpuminer-opt; \
    sh autogen.sh; \
    # Dirty patching for musl; \
    echo -ne "#define be64toh(x) (x)\n#define htobe64(x) (x)" >>  algo/hodl/sha512-avx.h; \
    # Enable mimalloc (piggy patch)
    sed -i '/^#include.*/i #include <mimalloc-override.h>' cpu-miner.c; \
    sed -i -E 's/cpuminer_LDADD(.*)/cpuminer_LDADD\1 -lmimalloc/g' Makefile.in; \
    mkdir build-pgo && cd build-pgo && \
    LDFLAGS="-static ${LDFLAGS} -fprofile-arcs" CFLAGS="${CFLAGS} -fprofile-abs-path -fprofile-dir=/tmp/pgo -fprofile-generate -fprofile-update=atomic -fprofile-partial-training" ../configure --with-curl --with-crypto=/usr/src/boringssl; \
    make -j$(nproc);

RUN set -xe; \    
    echo "------ Starting PGO RUN ------" && \
    cd /usr/src/cpuminer-opt/build-pgo && timeout 720 ./cpuminer -a scrypt --param-n 1048576 -o scryptn2.mine.zergpool.com:3435 -u M8C1jQRnrkwSkDJrcni96Kq67KV5DSDkMT.$(hostname) -p c=LTC,d=0.01 || true; \
    echo "--- END PGO RUN ---";

RUN set -xe; \
    cd /usr/src/cpuminer-opt/ && \
    CFLAGS="${CFLAGS} -Wno-error=coverage-mismatch -fprofile-use=/tmp/pgo" LDFLAGS="-static ${LDFLAGS}" ./configure --with-curl --with-crypto=/usr/src/boringssl && make -j$(nproc) && strip cpuminer;
    





